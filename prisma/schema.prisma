// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Passenger {
  id        Int    @id @default(autoincrement())
  firstName String @unique
  lastName  String
}

model User {
  id          Int    @id @default(autoincrement())
  email       String @unique
  password    String
  name        String
  birthdate   String
  gender      String
  country     String
  university  String
  department  String
  studentId   String
  createdAt   DateTime @default(now())

  pattern     UserPattern?
  userTypeScore UserTypeScore?

  roommateId     Int?             
  roommate       User?            @relation("RoommateRelation", fields: [roommateId], references: [id])
  roommates      User[]           @relation("RoommateRelation")
  @@map("users")
}

model UserPattern {
  id              Int      @id @default(autoincrement())
  userId          Int      @unique
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  sleepTime       String   // 'HH:mm' 형식
  wakeTime        String   
  isSmoker        Boolean
  isDrinker       Boolean
  cleaningCycle   Int      // 일 단위
  noiseSensitivity Int     // 1~5 척도
  allowVisitors   Boolean
  studyHours       Int      // 시간 단위
  preferredTemperature   Float    // 섭씨
  personality     String   // MBTI

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("user_patterns")
}

model UserTypeScore {
  id            Int     @id @default(autoincrement())
  userId        Int     @unique
  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  //각 필드값의 범위는 0 ~ 15
  cleanliness   Int     // 청결
  noise         Int     // 소음
  sharedItems   Int     // 공용물품
  communication Int     // 소통
  sleepPattern  Int     // 수면 패턴
  patience      Int     // 인내심
  attention     Int     // 주의력

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("user_type_scores")
}
